name: Docker Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    paths:
      - timeoff-management-application

permissions:
  contents: read
  id-token: write
  packages: write

env:
  DOCKER_CONTEXT_PATH: timeoff-management-application # .
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  ECR_REPO: ${{ github.ref == 'refs/heads/main' && secrets.PROD_ECR_REPO || secrets.DEV_ECR_REPO }}

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: google-github-actions/release-please-action@v4
        with:
          release-type: simple

  docker-release:
    needs: release-please
    if: needs.release-please.outputs.release_created
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.ECR_REPO }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ env.DOCKER_CONTEXT_PATH }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
