name: Docker Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    paths:
      - timeoff-management-application

permissions:
  contents: read
  id-token: write
  packages: write

env:
  DOCKER_CONTEXT_PATH: timeoff-management-application # .
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  ECR_REPO: ${{ github.ref == 'refs/heads/main' && secrets.PROD_ECR_REPO || secrets.DEV_ECR_REPO }}
  COMMIT_SHA: ${{ github.sha }}

jobs:
  docker-release-basic:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Build and push
        id: build-and-push
        working-directory: ${{ env.DOCKER_CONTEXT_PATH }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ env.ECR_REPO }}:latest .
          docker tag ${{ env.ECR_REPO }}:latest ${{ env.ECR_REPO }}:${{ env.COMMIT_SHA }}
          docker push ${{ env.ECR_REPO }}:latest
          docker push ${{ env.ECR_REPO }}:${{ env.COMMIT_SHA }}
